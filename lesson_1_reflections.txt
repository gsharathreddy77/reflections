How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   It pointed out the lines where the code was chnaged. So all I need to do was carefuly look at the changed lines
   and fix the bugs.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If we are in a wrong path, we can go back to a point where we were sure that things are right.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Often we may forget to make a commit and also we may not be sure when to do a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Unlike google docs, most of the coding assignmants and projects will have files dependenet on each other andwe need 
	to track them together. So git commits every file

How can you use the commands git log and git diff to view the history of files?

    Git log gives the entire list of commits with a commitID and a message starting from the most recent
	With git diff you can compare files from two different commits and see the changes.

How might using version control make you more confident to make changes that
could break something?

   Now I can go back to any previous commit and come back safely we would haev confidence to make changes
Now that you have your workspace set up, what do you want to try using Git for?

    I will try for my new android app I'm thinking of developing
